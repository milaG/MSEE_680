//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace OnlineLibrary.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LibraryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LibraryEntities object using the connection string found in the 'LibraryEntities' section of the application configuration file.
        /// </summary>
        public LibraryEntities() : base("name=LibraryEntities", "LibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryEntities object.
        /// </summary>
        public LibraryEntities(string connectionString) : base(connectionString, "LibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryEntities object.
        /// </summary>
        public LibraryEntities(EntityConnection connection) : base(connection, "LibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DVD> DVDs
        {
            get
            {
                if ((_DVDs == null))
                {
                    _DVDs = base.CreateObjectSet<DVD>("DVDs");
                }
                return _DVDs;
            }
        }
        private ObjectSet<DVD> _DVDs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DVDs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDVDs(DVD dVD)
        {
            base.AddObject("DVDs", dVD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="bookTitle">Initial value of the BookTitle property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="bookDownload">Initial value of the BookDownload property.</param>
        public static Book CreateBook(global::System.String bookId, global::System.String bookTitle, global::System.String author, global::System.String bookDownload)
        {
            Book book = new Book();
            book.BookId = bookId;
            book.BookTitle = bookTitle;
            book.Author = author;
            book.BookDownload = bookDownload;
            return book;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                if (_BookId != value)
                {
                    OnBookIdChanging(value);
                    ReportPropertyChanging("BookId");
                    _BookId = StructuralObject.SetValidValue(value, false, "BookId");
                    ReportPropertyChanged("BookId");
                    OnBookIdChanged();
                }
            }
        }
        private global::System.String _BookId;
        partial void OnBookIdChanging(global::System.String value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookTitle
        {
            get
            {
                return _BookTitle;
            }
            set
            {
                OnBookTitleChanging(value);
                ReportPropertyChanging("BookTitle");
                _BookTitle = StructuralObject.SetValidValue(value, false, "BookTitle");
                ReportPropertyChanged("BookTitle");
                OnBookTitleChanged();
            }
        }
        private global::System.String _BookTitle;
        partial void OnBookTitleChanging(global::System.String value);
        partial void OnBookTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false, "Author");
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true, "Summary");
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookDownload
        {
            get
            {
                return _BookDownload;
            }
            set
            {
                OnBookDownloadChanging(value);
                ReportPropertyChanging("BookDownload");
                _BookDownload = StructuralObject.SetValidValue(value, false, "BookDownload");
                ReportPropertyChanged("BookDownload");
                OnBookDownloadChanged();
            }
        }
        private global::System.String _BookDownload;
        partial void OnBookDownloadChanging(global::System.String value);
        partial void OnBookDownloadChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryModel", Name="DVD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DVD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DVD object.
        /// </summary>
        /// <param name="dvdId">Initial value of the DvdId property.</param>
        /// <param name="dvdTitle">Initial value of the DvdTitle property.</param>
        public static DVD CreateDVD(global::System.String dvdId, global::System.String dvdTitle)
        {
            DVD dVD = new DVD();
            dVD.DvdId = dvdId;
            dVD.DvdTitle = dvdTitle;
            return dVD;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DvdId
        {
            get
            {
                return _DvdId;
            }
            set
            {
                if (_DvdId != value)
                {
                    OnDvdIdChanging(value);
                    ReportPropertyChanging("DvdId");
                    _DvdId = StructuralObject.SetValidValue(value, false, "DvdId");
                    ReportPropertyChanged("DvdId");
                    OnDvdIdChanged();
                }
            }
        }
        private global::System.String _DvdId;
        partial void OnDvdIdChanging(global::System.String value);
        partial void OnDvdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DvdTitle
        {
            get
            {
                return _DvdTitle;
            }
            set
            {
                OnDvdTitleChanging(value);
                ReportPropertyChanging("DvdTitle");
                _DvdTitle = StructuralObject.SetValidValue(value, false, "DvdTitle");
                ReportPropertyChanged("DvdTitle");
                OnDvdTitleChanged();
            }
        }
        private global::System.String _DvdTitle;
        partial void OnDvdTitleChanging(global::System.String value);
        partial void OnDvdTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DvdSummary
        {
            get
            {
                return _DvdSummary;
            }
            set
            {
                OnDvdSummaryChanging(value);
                ReportPropertyChanging("DvdSummary");
                _DvdSummary = StructuralObject.SetValidValue(value, true, "DvdSummary");
                ReportPropertyChanged("DvdSummary");
                OnDvdSummaryChanged();
            }
        }
        private global::System.String _DvdSummary;
        partial void OnDvdSummaryChanging(global::System.String value);
        partial void OnDvdSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DvdRating
        {
            get
            {
                return _DvdRating;
            }
            set
            {
                OnDvdRatingChanging(value);
                ReportPropertyChanging("DvdRating");
                _DvdRating = StructuralObject.SetValidValue(value, true, "DvdRating");
                ReportPropertyChanged("DvdRating");
                OnDvdRatingChanged();
            }
        }
        private global::System.String _DvdRating;
        partial void OnDvdRatingChanging(global::System.String value);
        partial void OnDvdRatingChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="memberId">Initial value of the memberId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Member CreateMember(global::System.String memberId, global::System.String firstName, global::System.String lastName, global::System.String username, global::System.String password)
        {
            Member member = new Member();
            member.memberId = memberId;
            member.FirstName = firstName;
            member.LastName = lastName;
            member.Username = username;
            member.Password = password;
            return member;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String memberId
        {
            get
            {
                return _memberId;
            }
            set
            {
                if (_memberId != value)
                {
                    OnmemberIdChanging(value);
                    ReportPropertyChanging("memberId");
                    _memberId = StructuralObject.SetValidValue(value, false, "memberId");
                    ReportPropertyChanged("memberId");
                    OnmemberIdChanged();
                }
            }
        }
        private global::System.String _memberId;
        partial void OnmemberIdChanging(global::System.String value);
        partial void OnmemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Phonenumber
        {
            get
            {
                return _Phonenumber;
            }
            set
            {
                OnPhonenumberChanging(value);
                ReportPropertyChanging("Phonenumber");
                _Phonenumber = StructuralObject.SetValidValue(value, "Phonenumber");
                ReportPropertyChanged("Phonenumber");
                OnPhonenumberChanged();
            }
        }
        private Nullable<global::System.Int32> _Phonenumber;
        partial void OnPhonenumberChanging(Nullable<global::System.Int32> value);
        partial void OnPhonenumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    }

    #endregion

}
